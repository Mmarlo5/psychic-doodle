{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Mmarlo5/psychic-doodle/blob/main/Problem%20Set%205_additional%20data/first%20new%20graph\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9UTtSq-99wPL"
      },
      "source": [
        "\n",
        "This project is focused on looking to see if states where the number of abortions is highest resulted in more restrictions on abortion after the reversal of Roe v. Wade.\n",
        "\n",
        "The first dataset comes from https://www.guttmacher.org/united-states/abortion. This dataset is complex and contains data on abortion by state. \n",
        "\n",
        "The second dataset comes from https://lawatlas.org/datasets/abortion-laws This dataset is complex and contains data on abortion by state such as the type of restrictions.\n",
        "\n",
        "I added another dataset from the CDC - https://www.cdc.gov/mmwr/volumes/71/ss/ss7110a1.htm#T1_down. \n",
        "\n",
        "My research question is: Are states that have the highest frequency of abortions also the states that had the strictest restrictions after the reversal of Roe v. Wade.\n",
        "\n",
        "I hypothesis that the states with the highest number of occurences (abortions) are the same states with the tightest restrictions after the reversal of Roe v. Wade in 2022.\n",
        "\n",
        "For this project, I used certain variables since they best represented the research question. I used State level data to first look at the number of abortions by state and added additional occurrence level data. Then I collected data on the U.S states that put abortion bans into place after the reversal of Roe v. Wade. My thinking was that states were reacting to abortion in an attempt to stop a large proportion of women from having abortions since the rate increased. What I found was that states with the lowest occurrence of abortions were the states that had abortion bans in place after the reversal of Roe v. Wade.\n",
        "As the project continutes, I will be adding more data and additional graphs. The new dataset comes from pew research and contains data on the changes in opinions of abortion by year. https://news.gallup.com/poll/1576/abortion.aspx\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_21aTekK5WST",
        "outputId": "c11f504c-f3ab-4fb2-e886-22bf27b2b5f4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting geopandas\n",
            "  Downloading geopandas-0.12.2-py3-none-any.whl (1.1 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.1/1.1 MB\u001b[0m \u001b[31m10.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.9/dist-packages (from geopandas) (1.4.4)\n",
            "Requirement already satisfied: shapely>=1.7 in /usr/local/lib/python3.9/dist-packages (from geopandas) (2.0.1)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.9/dist-packages (from geopandas) (23.0)\n",
            "Collecting fiona>=1.8\n",
            "  Downloading Fiona-1.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.1 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m16.1/16.1 MB\u001b[0m \u001b[31m35.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting pyproj>=2.6.1.post1\n",
            "  Downloading pyproj-3.4.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.7 MB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.7/7.7 MB\u001b[0m \u001b[31m22.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting click-plugins>=1.0\n",
            "  Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n",
            "Requirement already satisfied: click~=8.0 in /usr/local/lib/python3.9/dist-packages (from fiona>=1.8->geopandas) (8.1.3)\n",
            "Collecting munch>=2.3.2\n",
            "  Downloading munch-2.5.0-py2.py3-none-any.whl (10 kB)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.9/dist-packages (from fiona>=1.8->geopandas) (6.1.0)\n",
            "Requirement already satisfied: attrs>=19.2.0 in /usr/local/lib/python3.9/dist-packages (from fiona>=1.8->geopandas) (22.2.0)\n",
            "Collecting cligj>=0.5\n",
            "  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.9/dist-packages (from fiona>=1.8->geopandas) (2022.12.7)\n",
            "Requirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.9/dist-packages (from pandas>=1.0.0->geopandas) (1.22.4)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=1.0.0->geopandas) (2022.7.1)\n",
            "Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=1.0.0->geopandas) (2.8.2)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.9/dist-packages (from munch>=2.3.2->fiona>=1.8->geopandas) (1.16.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.9/dist-packages (from importlib-metadata->fiona>=1.8->geopandas) (3.15.0)\n",
            "Installing collected packages: pyproj, munch, cligj, click-plugins, fiona, geopandas\n",
            "Successfully installed click-plugins-1.1.1 cligj-0.7.2 fiona-1.9.2 geopandas-0.12.2 munch-2.5.0 pyproj-3.4.1\n"
          ]
        }
      ],
      "source": [
        "import time, os, sys, re \n",
        "import zipfile, json, datetime, string    \n",
        "import numpy as np\n",
        "from statistics import *\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "import pandas as pd\n",
        "import pandas_datareader as pdr\n",
        "from pandas_datareader import wb\n",
        "from pandas.io.formats.style import Styler\n",
        "\n",
        "import urllib\n",
        "\n",
        "from google.colab import files\n",
        "\n",
        "import webbrowser                                                                      \n",
        "import folium as f                                                                     \n",
        "from folium.plugins import MarkerCluster, HeatMap                                      \n",
        "\n",
        "\n",
        "! pip install geopandas \n",
        "import geopandas as gpd  \n",
        "\n",
        "import seaborn as sns\n",
        "\n",
        "from google.colab import data_table\n",
        "data_table.enable_dataframe_formatter()\n",
        "\n",
        "from IPython.core.interactiveshell import InteractiveShell\n",
        "InteractiveShell.ast_node_interactivity = \"all\""
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "LCwCsGdVVaw6"
      },
      "source": [
        "**Data Management**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "hcSyrWX55xVN",
        "outputId": "d6600022-5a50-4b6f-95bc-0c26b7ca222c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Unnamed: 0  Abortion rate among women aged 15–44  Unnamed: 2  \\\n",
              "0            NaN                                2017.0      2019.0   \n",
              "1  United States                                  13.5        14.2   \n",
              "2            NaN                                   NaN         NaN   \n",
              "3      Northeast                                  20.5        21.8   \n",
              "4    Connecticut                                  17.7        17.9   \n",
              "\n",
              "   Unnamed: 3 % change in abortion rate Unnamed: 5 Unnamed: 6  \n",
              "0      2020.0                 2017–2019  2019–2020  2017–2020  \n",
              "1        14.4                        5%         1%         7%  \n",
              "2         NaN                       NaN        NaN        NaN  \n",
              "3        21.2                        7%        -3%         3%  \n",
              "4        16.7                        1%        -7%        -6%  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97e7677d-8b83-4b92-ad0e-1e7abb2431dc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Abortion rate among women aged 15–44</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>% change in abortion rate</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>2017–2019</td>\n",
              "      <td>2019–2020</td>\n",
              "      <td>2017–2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>United States</td>\n",
              "      <td>13.5</td>\n",
              "      <td>14.2</td>\n",
              "      <td>14.4</td>\n",
              "      <td>5%</td>\n",
              "      <td>1%</td>\n",
              "      <td>7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Northeast</td>\n",
              "      <td>20.5</td>\n",
              "      <td>21.8</td>\n",
              "      <td>21.2</td>\n",
              "      <td>7%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>17.7</td>\n",
              "      <td>17.9</td>\n",
              "      <td>16.7</td>\n",
              "      <td>1%</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-6%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97e7677d-8b83-4b92-ad0e-1e7abb2431dc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-97e7677d-8b83-4b92-ad0e-1e7abb2431dc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-97e7677d-8b83-4b92-ad0e-1e7abb2431dc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n{\n            'v': 2017.0,\n            'f': \"2017.0\",\n        },\n{\n            'v': 2019.0,\n            'f': \"2019.0\",\n        },\n{\n            'v': 2020.0,\n            'f': \"2020.0\",\n        },\n\"2017\\u20132019\",\n\"2019\\u20132020\",\n\"2017\\u20132020\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"United States\",\n{\n            'v': 13.5,\n            'f': \"13.5\",\n        },\n{\n            'v': 14.2,\n            'f': \"14.2\",\n        },\n{\n            'v': 14.4,\n            'f': \"14.4\",\n        },\n\"5%\",\n\"1%\",\n\"7%\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\nNaN,\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\nNaN,\nNaN,\nNaN],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Northeast\",\n{\n            'v': 20.5,\n            'f': \"20.5\",\n        },\n{\n            'v': 21.8,\n            'f': \"21.8\",\n        },\n{\n            'v': 21.2,\n            'f': \"21.2\",\n        },\n\"7%\",\n\"-3%\",\n\"3%\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Connecticut\",\n{\n            'v': 17.7,\n            'f': \"17.7\",\n        },\n{\n            'v': 17.9,\n            'f': \"17.9\",\n        },\n{\n            'v': 16.7,\n            'f': \"16.7\",\n        },\n\"1%\",\n\"-7%\",\n\"-6%\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"Unnamed: 0\"], [\"number\", \"Abortion rate among women aged 15\\u201344\"], [\"number\", \"Unnamed: 2\"], [\"number\", \"Unnamed: 3\"], [\"string\", \"% change in abortion rate\"], [\"string\", \"Unnamed: 5\"], [\"string\", \"Unnamed: 6\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 36
        }
      ],
      "source": [
        "abortionCen = pd.read_csv(\"https://raw.githubusercontent.com/Mmarlo5/psychic-doodle/main/Rate%20of%20US%20abortions-Table%201.csv\")\n",
        "abortionCen.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "DVhnKh55-rex",
        "outputId": "79371e83-c4ac-4984-b759-2d4236fedf84"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           State  Abortion rate aged 15-44 (2017)  \\\n",
              "0            NaN                           2017.0   \n",
              "1  United States                             13.5   \n",
              "2            NaN                              NaN   \n",
              "3      Northeast                             20.5   \n",
              "4    Connecticut                             17.7   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2019)  \\\n",
              "0                                       2019.0   \n",
              "1                                         14.2   \n",
              "2                                          NaN   \n",
              "3                                         21.8   \n",
              "4                                         17.9   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2020) % change in abortion rate  \\\n",
              "0                                       2020.0                 2017–2019   \n",
              "1                                         14.4                        5%   \n",
              "2                                          NaN                       NaN   \n",
              "3                                         21.2                        7%   \n",
              "4                                         16.7                        1%   \n",
              "\n",
              "  % change in abortion rate (2017-2019) % change in abortion rate (2019-2020)  \n",
              "0                             2019–2020                             2017–2020  \n",
              "1                                    1%                                    7%  \n",
              "2                                   NaN                                   NaN  \n",
              "3                                   -3%                                    3%  \n",
              "4                                   -7%                                   -6%  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a192fe6f-7faf-4667-9fba-8a6c73fa5b4a\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortion rate aged 15-44 (2017)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2019)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2020)</th>\n",
              "      <th>% change in abortion rate</th>\n",
              "      <th>% change in abortion rate (2017-2019)</th>\n",
              "      <th>% change in abortion rate (2019-2020)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>2017–2019</td>\n",
              "      <td>2019–2020</td>\n",
              "      <td>2017–2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>United States</td>\n",
              "      <td>13.5</td>\n",
              "      <td>14.2</td>\n",
              "      <td>14.4</td>\n",
              "      <td>5%</td>\n",
              "      <td>1%</td>\n",
              "      <td>7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Northeast</td>\n",
              "      <td>20.5</td>\n",
              "      <td>21.8</td>\n",
              "      <td>21.2</td>\n",
              "      <td>7%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>17.7</td>\n",
              "      <td>17.9</td>\n",
              "      <td>16.7</td>\n",
              "      <td>1%</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-6%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a192fe6f-7faf-4667-9fba-8a6c73fa5b4a')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a192fe6f-7faf-4667-9fba-8a6c73fa5b4a button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a192fe6f-7faf-4667-9fba-8a6c73fa5b4a');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n{\n            'v': 2017.0,\n            'f': \"2017.0\",\n        },\n{\n            'v': 2019.0,\n            'f': \"2019.0\",\n        },\n{\n            'v': 2020.0,\n            'f': \"2020.0\",\n        },\n\"2017\\u20132019\",\n\"2019\\u20132020\",\n\"2017\\u20132020\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"United States\",\n{\n            'v': 13.5,\n            'f': \"13.5\",\n        },\n{\n            'v': 14.2,\n            'f': \"14.2\",\n        },\n{\n            'v': 14.4,\n            'f': \"14.4\",\n        },\n\"5%\",\n\"1%\",\n\"7%\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\nNaN,\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\nNaN,\nNaN,\nNaN],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Northeast\",\n{\n            'v': 20.5,\n            'f': \"20.5\",\n        },\n{\n            'v': 21.8,\n            'f': \"21.8\",\n        },\n{\n            'v': 21.2,\n            'f': \"21.2\",\n        },\n\"7%\",\n\"-3%\",\n\"3%\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Connecticut\",\n{\n            'v': 17.7,\n            'f': \"17.7\",\n        },\n{\n            'v': 17.9,\n            'f': \"17.9\",\n        },\n{\n            'v': 16.7,\n            'f': \"16.7\",\n        },\n\"1%\",\n\"-7%\",\n\"-6%\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"number\", \"Abortion rate aged 15-44 (2017)\"], [\"number\", \"Abortion rate among women aged 15-44 (2019)\"], [\"number\", \"Abortion rate among women aged 15-44 (2020)\"], [\"string\", \"% change in abortion rate\"], [\"string\", \"% change in abortion rate (2017-2019)\"], [\"string\", \"% change in abortion rate (2019-2020)\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 40
        }
      ],
      "source": [
        "abortionCen = abortionCen.rename(columns={'Unnamed: 0': 'State', 'Abortion rate among women aged 15–44': 'Abortion rate aged 15-44 (2017)', 'Unnamed: 2': 'Abortion rate among women aged 15-44 (2019)', 'Unnamed: 3': 'Abortion rate among women aged 15-44 (2020)','Unnamed: 5': '% change in abortion rate (2017-2019)','Unnamed: 6': '% change in abortion rate (2019-2020)' })\n",
        "abortionCen.head()\n",
        "#Renamed all variables for better understanding\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 817
        },
        "id": "zMPtADP4BllR",
        "outputId": "7e578bd2-c84b-46c3-998d-f81dc6812386"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   State Abortion rate aged 15-44 (2017)  \\\n",
              "0                   None                          2017.0   \n",
              "1          United States                            13.5   \n",
              "2                   None                            None   \n",
              "3              Northeast                            20.5   \n",
              "4            Connecticut                            17.7   \n",
              "5                  Maine                             8.8   \n",
              "6          Massachusetts                            13.5   \n",
              "7          New Hampshire                             9.2   \n",
              "8             New Jersey                            28.0   \n",
              "9               New York                            26.3   \n",
              "10          Pennsylvania                            13.1   \n",
              "11          Rhode Island                            16.7   \n",
              "12               Vermont                            11.4   \n",
              "13               Midwest                            10.2   \n",
              "14              Illinois                            16.6   \n",
              "15               Indiana                             5.9   \n",
              "16                  Iowa                             6.3   \n",
              "17                Kansas                            12.2   \n",
              "18              Michigan                            14.2   \n",
              "19             Minnesota                            10.1   \n",
              "20              Missouri                             4.0   \n",
              "21              Nebraska                             5.5   \n",
              "22          North Dakota                             7.9   \n",
              "23                  Ohio                             9.4   \n",
              "24          South Dakota                             3.1   \n",
              "25             Wisconsin                             5.9   \n",
              "26              South                               12.1   \n",
              "27               Alabama                             6.4   \n",
              "28              Arkansas                             5.5   \n",
              "29              Delaware                            10.5   \n",
              "30  District of Columbia                            30.2   \n",
              "31               Florida                            18.6   \n",
              "32               Georgia                            16.9   \n",
              "33              Kentucky                             3.8   \n",
              "34             Louisiana                            10.6   \n",
              "35              Maryland                            25.0   \n",
              "36           Mississippi                             4.3   \n",
              "37        North Carolina                            14.6   \n",
              "38              Oklahoma                             6.2   \n",
              "39        South Carolina                             5.3   \n",
              "40             Tennessee                             9.2   \n",
              "41                 Texas                             9.4   \n",
              "42              Virginia                            10.2   \n",
              "43         West Virginia                             4.4   \n",
              "44                  West                            13.5   \n",
              "45                Alaska                             8.6   \n",
              "46               Arizona                             9.2   \n",
              "47            California                            16.4   \n",
              "48              Colorado                            10.9   \n",
              "49                Hawaii                            12.0   \n",
              "50                 Idaho                             3.9   \n",
              "51               Montana                             8.3   \n",
              "52                Nevada                            16.4   \n",
              "53            New Mexico                            11.7   \n",
              "54                Oregon                            11.9   \n",
              "55                  Utah                             4.4   \n",
              "56            Washington                            12.1   \n",
              "57               Wyoming                             1.3   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2019)  \\\n",
              "0                                       2019.0   \n",
              "1                                         14.2   \n",
              "2                                         None   \n",
              "3                                         21.8   \n",
              "4                                         17.9   \n",
              "5                                          9.0   \n",
              "6                                         13.6   \n",
              "7                                          8.5   \n",
              "8                                         28.8   \n",
              "9                                         30.2   \n",
              "10                                        13.1   \n",
              "11                                        13.6   \n",
              "12                                        10.4   \n",
              "13                                        10.9   \n",
              "14                                        20.9   \n",
              "15                                         5.9   \n",
              "16                                         5.8   \n",
              "17                                        12.0   \n",
              "18                                        15.5   \n",
              "19                                        10.3   \n",
              "20                                         1.3   \n",
              "21                                         5.8   \n",
              "22                                         7.5   \n",
              "23                                         9.2   \n",
              "24                                         2.5   \n",
              "25                                         6.6   \n",
              "26                                        12.5   \n",
              "27                                         6.2   \n",
              "28                                         5.0   \n",
              "29                                        11.3   \n",
              "30                                        51.8   \n",
              "31                                        18.5   \n",
              "32                                        18.3   \n",
              "33                                         4.3   \n",
              "34                                         8.8   \n",
              "35                                        25.3   \n",
              "36                                         5.5   \n",
              "37                                        14.2   \n",
              "38                                        11.7   \n",
              "39                                         5.1   \n",
              "40                                         7.5   \n",
              "41                                         9.8   \n",
              "42                                         9.7   \n",
              "43                                         3.7   \n",
              "44                                        14.5   \n",
              "45                                         9.1   \n",
              "46                                         9.3   \n",
              "47                                        18.7   \n",
              "48                                        10.5   \n",
              "49                                        12.1   \n",
              "50                                         4.4   \n",
              "51                                         8.2   \n",
              "52                                        16.4   \n",
              "53                                        11.2   \n",
              "54                                        11.0   \n",
              "55                                         4.3   \n",
              "56                                        12.2   \n",
              "57                                         0.8   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2020) % change in abortion rate  \\\n",
              "0                                       2020.0                 2017–2019   \n",
              "1                                         14.4                        5%   \n",
              "2                                         None                      None   \n",
              "3                                         21.2                        7%   \n",
              "4                                         16.7                        1%   \n",
              "5                                         10.1                        2%   \n",
              "6                                         12.2                        1%   \n",
              "7                                          8.3                       -7%   \n",
              "8                                         29.2                        3%   \n",
              "9                                         28.8                       15%   \n",
              "10                                        13.6                       -0%   \n",
              "11                                        13.3                      -19%   \n",
              "12                                        10.7                       -9%   \n",
              "13                                        11.2                        7%   \n",
              "14                                        21.3                       26%   \n",
              "15                                         6.0                       -1%   \n",
              "16                                         5.9                       -9%   \n",
              "17                                        14.5                       -2%   \n",
              "18                                        16.8                        9%   \n",
              "19                                        10.2                        2%   \n",
              "20                                         0.1                      -68%   \n",
              "21                                         5.9                        6%   \n",
              "22                                         7.8                       -5%   \n",
              "23                                         9.5                       -2%   \n",
              "24                                         0.8                      -20%   \n",
              "25                                         6.4                       12%   \n",
              "26                                        12.9                        3%   \n",
              "27                                         6.0                       -4%   \n",
              "28                                         5.6                      -10%   \n",
              "29                                        10.0                        7%   \n",
              "30                                        48.9                       72%   \n",
              "31                                        19.7                       -0%   \n",
              "32                                        18.9                        8%   \n",
              "33                                         4.8                       14%   \n",
              "34                                         8.0                      -17%   \n",
              "35                                        25.9                        1%   \n",
              "36                                         6.1                       27%   \n",
              "37                                        15.3                       -3%   \n",
              "38                                        12.4                       88%   \n",
              "39                                         5.3                       -4%   \n",
              "40                                         8.1                      -19%   \n",
              "41                                         9.5                        4%   \n",
              "42                                        11.0                       -5%   \n",
              "43                                         3.1                      -16%   \n",
              "44                                        14.9                        8%   \n",
              "45                                         8.6                        6%   \n",
              "46                                         9.3                        1%   \n",
              "47                                        19.2                       14%   \n",
              "48                                        11.2                       -4%   \n",
              "49                                        12.1                        0%   \n",
              "50                                         4.8                       12%   \n",
              "51                                         8.2                       -1%   \n",
              "52                                        17.9                       -0%   \n",
              "53                                        14.7                       -4%   \n",
              "54                                        10.3                       -7%   \n",
              "55                                         4.4                       -3%   \n",
              "56                                        11.7                        1%   \n",
              "57                                         0.9                      -39%   \n",
              "\n",
              "   % change in abortion rate (2017-2019) % change in abortion rate (2019-2020)  \n",
              "0                              2019–2020                             2017–2020  \n",
              "1                                     1%                                    7%  \n",
              "2                                   None                                  None  \n",
              "3                                    -3%                                    3%  \n",
              "4                                    -7%                                   -6%  \n",
              "5                                    12%                                   15%  \n",
              "6                                   -10%                                   -9%  \n",
              "7                                    -2%                                   -9%  \n",
              "8                                     1%                                    4%  \n",
              "9                                    -5%                                    9%  \n",
              "10                                    4%                                    4%  \n",
              "11                                   -2%                                  -21%  \n",
              "12                                    3%                                   -6%  \n",
              "13                                    2%                                   10%  \n",
              "14                                    2%                                   28%  \n",
              "15                                    2%                                    1%  \n",
              "16                                    2%                                   -7%  \n",
              "17                                   21%                                   19%  \n",
              "18                                    8%                                   18%  \n",
              "19                                   -1%                                    1%  \n",
              "20                                  -92%                                  -98%  \n",
              "21                                    2%                                    8%  \n",
              "22                                    4%                                   -1%  \n",
              "23                                    3%                                    1%  \n",
              "24                                  -68%                                  -74%  \n",
              "25                                   -3%                                    9%  \n",
              "26                                    3%                                    6%  \n",
              "27                                   -3%                                   -7%  \n",
              "28                                   12%                                    1%  \n",
              "29                                  -12%                                   -5%  \n",
              "30                                   -6%                                   62%  \n",
              "31                                    6%                                    6%  \n",
              "32                                    3%                                   12%  \n",
              "33                                   12%                                   27%  \n",
              "34                                   -9%                                  -24%  \n",
              "35                                    2%                                    4%  \n",
              "36                                   11%                                   41%  \n",
              "37                                    8%                                    5%  \n",
              "38                                    6%                                  100%  \n",
              "39                                    4%                                   -0%  \n",
              "40                                    8%                                  -12%  \n",
              "41                                   -3%                                    1%  \n",
              "42                                   13%                                    7%  \n",
              "43                                  -16%                                  -30%  \n",
              "44                                    2%                                   10%  \n",
              "45                                   -5%                                   -0%  \n",
              "46                                    0%                                    1%  \n",
              "47                                    3%                                   17%  \n",
              "48                                    7%                                    3%  \n",
              "49                                    0%                                    0%  \n",
              "50                                    9%                                   22%  \n",
              "51                                    0%                                   -1%  \n",
              "52                                    9%                                    9%  \n",
              "53                                   31%                                   26%  \n",
              "54                                   -6%                                  -13%  \n",
              "55                                    2%                                   -0%  \n",
              "56                                   -4%                                   -3%  \n",
              "57                                   13%                                  -32%  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5753119a-31f0-4fbc-9ba4-92b4f7c56c40\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortion rate aged 15-44 (2017)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2019)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2020)</th>\n",
              "      <th>% change in abortion rate</th>\n",
              "      <th>% change in abortion rate (2017-2019)</th>\n",
              "      <th>% change in abortion rate (2019-2020)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>None</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>2017–2019</td>\n",
              "      <td>2019–2020</td>\n",
              "      <td>2017–2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>United States</td>\n",
              "      <td>13.5</td>\n",
              "      <td>14.2</td>\n",
              "      <td>14.4</td>\n",
              "      <td>5%</td>\n",
              "      <td>1%</td>\n",
              "      <td>7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Northeast</td>\n",
              "      <td>20.5</td>\n",
              "      <td>21.8</td>\n",
              "      <td>21.2</td>\n",
              "      <td>7%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>17.7</td>\n",
              "      <td>17.9</td>\n",
              "      <td>16.7</td>\n",
              "      <td>1%</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-6%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Maine</td>\n",
              "      <td>8.8</td>\n",
              "      <td>9.0</td>\n",
              "      <td>10.1</td>\n",
              "      <td>2%</td>\n",
              "      <td>12%</td>\n",
              "      <td>15%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Massachusetts</td>\n",
              "      <td>13.5</td>\n",
              "      <td>13.6</td>\n",
              "      <td>12.2</td>\n",
              "      <td>1%</td>\n",
              "      <td>-10%</td>\n",
              "      <td>-9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>New Hampshire</td>\n",
              "      <td>9.2</td>\n",
              "      <td>8.5</td>\n",
              "      <td>8.3</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-2%</td>\n",
              "      <td>-9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>New Jersey</td>\n",
              "      <td>28.0</td>\n",
              "      <td>28.8</td>\n",
              "      <td>29.2</td>\n",
              "      <td>3%</td>\n",
              "      <td>1%</td>\n",
              "      <td>4%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>New York</td>\n",
              "      <td>26.3</td>\n",
              "      <td>30.2</td>\n",
              "      <td>28.8</td>\n",
              "      <td>15%</td>\n",
              "      <td>-5%</td>\n",
              "      <td>9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Pennsylvania</td>\n",
              "      <td>13.1</td>\n",
              "      <td>13.1</td>\n",
              "      <td>13.6</td>\n",
              "      <td>-0%</td>\n",
              "      <td>4%</td>\n",
              "      <td>4%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Rhode Island</td>\n",
              "      <td>16.7</td>\n",
              "      <td>13.6</td>\n",
              "      <td>13.3</td>\n",
              "      <td>-19%</td>\n",
              "      <td>-2%</td>\n",
              "      <td>-21%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Vermont</td>\n",
              "      <td>11.4</td>\n",
              "      <td>10.4</td>\n",
              "      <td>10.7</td>\n",
              "      <td>-9%</td>\n",
              "      <td>3%</td>\n",
              "      <td>-6%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Midwest</td>\n",
              "      <td>10.2</td>\n",
              "      <td>10.9</td>\n",
              "      <td>11.2</td>\n",
              "      <td>7%</td>\n",
              "      <td>2%</td>\n",
              "      <td>10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Illinois</td>\n",
              "      <td>16.6</td>\n",
              "      <td>20.9</td>\n",
              "      <td>21.3</td>\n",
              "      <td>26%</td>\n",
              "      <td>2%</td>\n",
              "      <td>28%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Indiana</td>\n",
              "      <td>5.9</td>\n",
              "      <td>5.9</td>\n",
              "      <td>6.0</td>\n",
              "      <td>-1%</td>\n",
              "      <td>2%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Iowa</td>\n",
              "      <td>6.3</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.9</td>\n",
              "      <td>-9%</td>\n",
              "      <td>2%</td>\n",
              "      <td>-7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Kansas</td>\n",
              "      <td>12.2</td>\n",
              "      <td>12.0</td>\n",
              "      <td>14.5</td>\n",
              "      <td>-2%</td>\n",
              "      <td>21%</td>\n",
              "      <td>19%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Michigan</td>\n",
              "      <td>14.2</td>\n",
              "      <td>15.5</td>\n",
              "      <td>16.8</td>\n",
              "      <td>9%</td>\n",
              "      <td>8%</td>\n",
              "      <td>18%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Minnesota</td>\n",
              "      <td>10.1</td>\n",
              "      <td>10.3</td>\n",
              "      <td>10.2</td>\n",
              "      <td>2%</td>\n",
              "      <td>-1%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Missouri</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.1</td>\n",
              "      <td>-68%</td>\n",
              "      <td>-92%</td>\n",
              "      <td>-98%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Nebraska</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.8</td>\n",
              "      <td>5.9</td>\n",
              "      <td>6%</td>\n",
              "      <td>2%</td>\n",
              "      <td>8%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>North Dakota</td>\n",
              "      <td>7.9</td>\n",
              "      <td>7.5</td>\n",
              "      <td>7.8</td>\n",
              "      <td>-5%</td>\n",
              "      <td>4%</td>\n",
              "      <td>-1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Ohio</td>\n",
              "      <td>9.4</td>\n",
              "      <td>9.2</td>\n",
              "      <td>9.5</td>\n",
              "      <td>-2%</td>\n",
              "      <td>3%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>South Dakota</td>\n",
              "      <td>3.1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>0.8</td>\n",
              "      <td>-20%</td>\n",
              "      <td>-68%</td>\n",
              "      <td>-74%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Wisconsin</td>\n",
              "      <td>5.9</td>\n",
              "      <td>6.6</td>\n",
              "      <td>6.4</td>\n",
              "      <td>12%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>South</td>\n",
              "      <td>12.1</td>\n",
              "      <td>12.5</td>\n",
              "      <td>12.9</td>\n",
              "      <td>3%</td>\n",
              "      <td>3%</td>\n",
              "      <td>6%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.4</td>\n",
              "      <td>6.2</td>\n",
              "      <td>6.0</td>\n",
              "      <td>-4%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>-7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>5.5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>-10%</td>\n",
              "      <td>12%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Delaware</td>\n",
              "      <td>10.5</td>\n",
              "      <td>11.3</td>\n",
              "      <td>10.0</td>\n",
              "      <td>7%</td>\n",
              "      <td>-12%</td>\n",
              "      <td>-5%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>District of Columbia</td>\n",
              "      <td>30.2</td>\n",
              "      <td>51.8</td>\n",
              "      <td>48.9</td>\n",
              "      <td>72%</td>\n",
              "      <td>-6%</td>\n",
              "      <td>62%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>Florida</td>\n",
              "      <td>18.6</td>\n",
              "      <td>18.5</td>\n",
              "      <td>19.7</td>\n",
              "      <td>-0%</td>\n",
              "      <td>6%</td>\n",
              "      <td>6%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>Georgia</td>\n",
              "      <td>16.9</td>\n",
              "      <td>18.3</td>\n",
              "      <td>18.9</td>\n",
              "      <td>8%</td>\n",
              "      <td>3%</td>\n",
              "      <td>12%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>Kentucky</td>\n",
              "      <td>3.8</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.8</td>\n",
              "      <td>14%</td>\n",
              "      <td>12%</td>\n",
              "      <td>27%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>Louisiana</td>\n",
              "      <td>10.6</td>\n",
              "      <td>8.8</td>\n",
              "      <td>8.0</td>\n",
              "      <td>-17%</td>\n",
              "      <td>-9%</td>\n",
              "      <td>-24%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>Maryland</td>\n",
              "      <td>25.0</td>\n",
              "      <td>25.3</td>\n",
              "      <td>25.9</td>\n",
              "      <td>1%</td>\n",
              "      <td>2%</td>\n",
              "      <td>4%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Mississippi</td>\n",
              "      <td>4.3</td>\n",
              "      <td>5.5</td>\n",
              "      <td>6.1</td>\n",
              "      <td>27%</td>\n",
              "      <td>11%</td>\n",
              "      <td>41%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>North Carolina</td>\n",
              "      <td>14.6</td>\n",
              "      <td>14.2</td>\n",
              "      <td>15.3</td>\n",
              "      <td>-3%</td>\n",
              "      <td>8%</td>\n",
              "      <td>5%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>Oklahoma</td>\n",
              "      <td>6.2</td>\n",
              "      <td>11.7</td>\n",
              "      <td>12.4</td>\n",
              "      <td>88%</td>\n",
              "      <td>6%</td>\n",
              "      <td>100%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>South Carolina</td>\n",
              "      <td>5.3</td>\n",
              "      <td>5.1</td>\n",
              "      <td>5.3</td>\n",
              "      <td>-4%</td>\n",
              "      <td>4%</td>\n",
              "      <td>-0%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>Tennessee</td>\n",
              "      <td>9.2</td>\n",
              "      <td>7.5</td>\n",
              "      <td>8.1</td>\n",
              "      <td>-19%</td>\n",
              "      <td>8%</td>\n",
              "      <td>-12%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>Texas</td>\n",
              "      <td>9.4</td>\n",
              "      <td>9.8</td>\n",
              "      <td>9.5</td>\n",
              "      <td>4%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>Virginia</td>\n",
              "      <td>10.2</td>\n",
              "      <td>9.7</td>\n",
              "      <td>11.0</td>\n",
              "      <td>-5%</td>\n",
              "      <td>13%</td>\n",
              "      <td>7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>West Virginia</td>\n",
              "      <td>4.4</td>\n",
              "      <td>3.7</td>\n",
              "      <td>3.1</td>\n",
              "      <td>-16%</td>\n",
              "      <td>-16%</td>\n",
              "      <td>-30%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>West</td>\n",
              "      <td>13.5</td>\n",
              "      <td>14.5</td>\n",
              "      <td>14.9</td>\n",
              "      <td>8%</td>\n",
              "      <td>2%</td>\n",
              "      <td>10%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>8.6</td>\n",
              "      <td>9.1</td>\n",
              "      <td>8.6</td>\n",
              "      <td>6%</td>\n",
              "      <td>-5%</td>\n",
              "      <td>-0%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>9.2</td>\n",
              "      <td>9.3</td>\n",
              "      <td>9.3</td>\n",
              "      <td>1%</td>\n",
              "      <td>0%</td>\n",
              "      <td>1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>California</td>\n",
              "      <td>16.4</td>\n",
              "      <td>18.7</td>\n",
              "      <td>19.2</td>\n",
              "      <td>14%</td>\n",
              "      <td>3%</td>\n",
              "      <td>17%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>Colorado</td>\n",
              "      <td>10.9</td>\n",
              "      <td>10.5</td>\n",
              "      <td>11.2</td>\n",
              "      <td>-4%</td>\n",
              "      <td>7%</td>\n",
              "      <td>3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>Hawaii</td>\n",
              "      <td>12.0</td>\n",
              "      <td>12.1</td>\n",
              "      <td>12.1</td>\n",
              "      <td>0%</td>\n",
              "      <td>0%</td>\n",
              "      <td>0%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Idaho</td>\n",
              "      <td>3.9</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.8</td>\n",
              "      <td>12%</td>\n",
              "      <td>9%</td>\n",
              "      <td>22%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>Montana</td>\n",
              "      <td>8.3</td>\n",
              "      <td>8.2</td>\n",
              "      <td>8.2</td>\n",
              "      <td>-1%</td>\n",
              "      <td>0%</td>\n",
              "      <td>-1%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Nevada</td>\n",
              "      <td>16.4</td>\n",
              "      <td>16.4</td>\n",
              "      <td>17.9</td>\n",
              "      <td>-0%</td>\n",
              "      <td>9%</td>\n",
              "      <td>9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>New Mexico</td>\n",
              "      <td>11.7</td>\n",
              "      <td>11.2</td>\n",
              "      <td>14.7</td>\n",
              "      <td>-4%</td>\n",
              "      <td>31%</td>\n",
              "      <td>26%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>Oregon</td>\n",
              "      <td>11.9</td>\n",
              "      <td>11.0</td>\n",
              "      <td>10.3</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-6%</td>\n",
              "      <td>-13%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>Utah</td>\n",
              "      <td>4.4</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.4</td>\n",
              "      <td>-3%</td>\n",
              "      <td>2%</td>\n",
              "      <td>-0%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>Washington</td>\n",
              "      <td>12.1</td>\n",
              "      <td>12.2</td>\n",
              "      <td>11.7</td>\n",
              "      <td>1%</td>\n",
              "      <td>-4%</td>\n",
              "      <td>-3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>1.3</td>\n",
              "      <td>0.8</td>\n",
              "      <td>0.9</td>\n",
              "      <td>-39%</td>\n",
              "      <td>13%</td>\n",
              "      <td>-32%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5753119a-31f0-4fbc-9ba4-92b4f7c56c40')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5753119a-31f0-4fbc-9ba4-92b4f7c56c40 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5753119a-31f0-4fbc-9ba4-92b4f7c56c40');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\n\"None\",\n2017.0,\n2019.0,\n2020.0,\n\"2017\\u20132019\",\n\"2019\\u20132020\",\n\"2017\\u20132020\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"United States\",\n13.5,\n14.2,\n14.4,\n\"5%\",\n\"1%\",\n\"7%\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"None\",\n\"None\",\n\"None\",\n\"None\",\n\"None\",\n\"None\",\n\"None\"],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Northeast\",\n20.5,\n21.8,\n21.2,\n\"7%\",\n\"-3%\",\n\"3%\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Connecticut\",\n17.7,\n17.9,\n16.7,\n\"1%\",\n\"-7%\",\n\"-6%\"],\n [{\n            'v': 5,\n            'f': \"5\",\n        },\n\"Maine\",\n8.8,\n9.0,\n10.1,\n\"2%\",\n\"12%\",\n\"15%\"],\n [{\n            'v': 6,\n            'f': \"6\",\n        },\n\"Massachusetts\",\n13.5,\n13.6,\n12.2,\n\"1%\",\n\"-10%\",\n\"-9%\"],\n [{\n            'v': 7,\n            'f': \"7\",\n        },\n\"New Hampshire\",\n9.2,\n8.5,\n8.3,\n\"-7%\",\n\"-2%\",\n\"-9%\"],\n [{\n            'v': 8,\n            'f': \"8\",\n        },\n\"New Jersey\",\n28.0,\n28.8,\n29.2,\n\"3%\",\n\"1%\",\n\"4%\"],\n [{\n            'v': 9,\n            'f': \"9\",\n        },\n\"New York\",\n26.3,\n30.2,\n28.8,\n\"15%\",\n\"-5%\",\n\"9%\"],\n [{\n            'v': 10,\n            'f': \"10\",\n        },\n\"Pennsylvania\",\n13.1,\n13.1,\n13.6,\n\"-0%\",\n\"4%\",\n\"4%\"],\n [{\n            'v': 11,\n            'f': \"11\",\n        },\n\"Rhode Island\",\n16.7,\n13.6,\n13.3,\n\"-19%\",\n\"-2%\",\n\"-21%\"],\n [{\n            'v': 12,\n            'f': \"12\",\n        },\n\"Vermont\",\n11.4,\n10.4,\n10.7,\n\"-9%\",\n\"3%\",\n\"-6%\"],\n [{\n            'v': 13,\n            'f': \"13\",\n        },\n\"Midwest\",\n10.2,\n10.9,\n11.2,\n\"7%\",\n\"2%\",\n\"10%\"],\n [{\n            'v': 14,\n            'f': \"14\",\n        },\n\"Illinois\",\n16.6,\n20.9,\n21.3,\n\"26%\",\n\"2%\",\n\"28%\"],\n [{\n            'v': 15,\n            'f': \"15\",\n        },\n\"Indiana\",\n5.9,\n5.9,\n6.0,\n\"-1%\",\n\"2%\",\n\"1%\"],\n [{\n            'v': 16,\n            'f': \"16\",\n        },\n\"Iowa\",\n6.3,\n5.8,\n5.9,\n\"-9%\",\n\"2%\",\n\"-7%\"],\n [{\n            'v': 17,\n            'f': \"17\",\n        },\n\"Kansas\",\n12.2,\n12.0,\n14.5,\n\"-2%\",\n\"21%\",\n\"19%\"],\n [{\n            'v': 18,\n            'f': \"18\",\n        },\n\"Michigan\",\n14.2,\n15.5,\n16.8,\n\"9%\",\n\"8%\",\n\"18%\"],\n [{\n            'v': 19,\n            'f': \"19\",\n        },\n\"Minnesota\",\n10.1,\n10.3,\n10.2,\n\"2%\",\n\"-1%\",\n\"1%\"],\n [{\n            'v': 20,\n            'f': \"20\",\n        },\n\"Missouri\",\n4.0,\n1.3,\n0.1,\n\"-68%\",\n\"-92%\",\n\"-98%\"],\n [{\n            'v': 21,\n            'f': \"21\",\n        },\n\"Nebraska\",\n5.5,\n5.8,\n5.9,\n\"6%\",\n\"2%\",\n\"8%\"],\n [{\n            'v': 22,\n            'f': \"22\",\n        },\n\"North Dakota\",\n7.9,\n7.5,\n7.8,\n\"-5%\",\n\"4%\",\n\"-1%\"],\n [{\n            'v': 23,\n            'f': \"23\",\n        },\n\"Ohio\",\n9.4,\n9.2,\n9.5,\n\"-2%\",\n\"3%\",\n\"1%\"],\n [{\n            'v': 24,\n            'f': \"24\",\n        },\n\"South Dakota\",\n3.1,\n2.5,\n0.8,\n\"-20%\",\n\"-68%\",\n\"-74%\"],\n [{\n            'v': 25,\n            'f': \"25\",\n        },\n\"Wisconsin\",\n5.9,\n6.6,\n6.4,\n\"12%\",\n\"-3%\",\n\"9%\"],\n [{\n            'v': 26,\n            'f': \"26\",\n        },\n\"South   \",\n12.1,\n12.5,\n12.9,\n\"3%\",\n\"3%\",\n\"6%\"],\n [{\n            'v': 27,\n            'f': \"27\",\n        },\n\"Alabama\",\n6.4,\n6.2,\n6.0,\n\"-4%\",\n\"-3%\",\n\"-7%\"],\n [{\n            'v': 28,\n            'f': \"28\",\n        },\n\"Arkansas\",\n5.5,\n5.0,\n5.6,\n\"-10%\",\n\"12%\",\n\"1%\"],\n [{\n            'v': 29,\n            'f': \"29\",\n        },\n\"Delaware\",\n10.5,\n11.3,\n10.0,\n\"7%\",\n\"-12%\",\n\"-5%\"],\n [{\n            'v': 30,\n            'f': \"30\",\n        },\n\"District of Columbia\",\n30.2,\n51.8,\n48.9,\n\"72%\",\n\"-6%\",\n\"62%\"],\n [{\n            'v': 31,\n            'f': \"31\",\n        },\n\"Florida\",\n18.6,\n18.5,\n19.7,\n\"-0%\",\n\"6%\",\n\"6%\"],\n [{\n            'v': 32,\n            'f': \"32\",\n        },\n\"Georgia\",\n16.9,\n18.3,\n18.9,\n\"8%\",\n\"3%\",\n\"12%\"],\n [{\n            'v': 33,\n            'f': \"33\",\n        },\n\"Kentucky\",\n3.8,\n4.3,\n4.8,\n\"14%\",\n\"12%\",\n\"27%\"],\n [{\n            'v': 34,\n            'f': \"34\",\n        },\n\"Louisiana\",\n10.6,\n8.8,\n8.0,\n\"-17%\",\n\"-9%\",\n\"-24%\"],\n [{\n            'v': 35,\n            'f': \"35\",\n        },\n\"Maryland\",\n25.0,\n25.3,\n25.9,\n\"1%\",\n\"2%\",\n\"4%\"],\n [{\n            'v': 36,\n            'f': \"36\",\n        },\n\"Mississippi\",\n4.3,\n5.5,\n6.1,\n\"27%\",\n\"11%\",\n\"41%\"],\n [{\n            'v': 37,\n            'f': \"37\",\n        },\n\"North Carolina\",\n14.6,\n14.2,\n15.3,\n\"-3%\",\n\"8%\",\n\"5%\"],\n [{\n            'v': 38,\n            'f': \"38\",\n        },\n\"Oklahoma\",\n6.2,\n11.7,\n12.4,\n\"88%\",\n\"6%\",\n\"100%\"],\n [{\n            'v': 39,\n            'f': \"39\",\n        },\n\"South Carolina\",\n5.3,\n5.1,\n5.3,\n\"-4%\",\n\"4%\",\n\"-0%\"],\n [{\n            'v': 40,\n            'f': \"40\",\n        },\n\"Tennessee\",\n9.2,\n7.5,\n8.1,\n\"-19%\",\n\"8%\",\n\"-12%\"],\n [{\n            'v': 41,\n            'f': \"41\",\n        },\n\"Texas\",\n9.4,\n9.8,\n9.5,\n\"4%\",\n\"-3%\",\n\"1%\"],\n [{\n            'v': 42,\n            'f': \"42\",\n        },\n\"Virginia\",\n10.2,\n9.7,\n11.0,\n\"-5%\",\n\"13%\",\n\"7%\"],\n [{\n            'v': 43,\n            'f': \"43\",\n        },\n\"West Virginia\",\n4.4,\n3.7,\n3.1,\n\"-16%\",\n\"-16%\",\n\"-30%\"],\n [{\n            'v': 44,\n            'f': \"44\",\n        },\n\"West\",\n13.5,\n14.5,\n14.9,\n\"8%\",\n\"2%\",\n\"10%\"],\n [{\n            'v': 45,\n            'f': \"45\",\n        },\n\"Alaska\",\n8.6,\n9.1,\n8.6,\n\"6%\",\n\"-5%\",\n\"-0%\"],\n [{\n            'v': 46,\n            'f': \"46\",\n        },\n\"Arizona\",\n9.2,\n9.3,\n9.3,\n\"1%\",\n\"0%\",\n\"1%\"],\n [{\n            'v': 47,\n            'f': \"47\",\n        },\n\"California\",\n16.4,\n18.7,\n19.2,\n\"14%\",\n\"3%\",\n\"17%\"],\n [{\n            'v': 48,\n            'f': \"48\",\n        },\n\"Colorado\",\n10.9,\n10.5,\n11.2,\n\"-4%\",\n\"7%\",\n\"3%\"],\n [{\n            'v': 49,\n            'f': \"49\",\n        },\n\"Hawaii\",\n12.0,\n12.1,\n12.1,\n\"0%\",\n\"0%\",\n\"0%\"],\n [{\n            'v': 50,\n            'f': \"50\",\n        },\n\"Idaho\",\n3.9,\n4.4,\n4.8,\n\"12%\",\n\"9%\",\n\"22%\"],\n [{\n            'v': 51,\n            'f': \"51\",\n        },\n\"Montana\",\n8.3,\n8.2,\n8.2,\n\"-1%\",\n\"0%\",\n\"-1%\"],\n [{\n            'v': 52,\n            'f': \"52\",\n        },\n\"Nevada\",\n16.4,\n16.4,\n17.9,\n\"-0%\",\n\"9%\",\n\"9%\"],\n [{\n            'v': 53,\n            'f': \"53\",\n        },\n\"New Mexico\",\n11.7,\n11.2,\n14.7,\n\"-4%\",\n\"31%\",\n\"26%\"],\n [{\n            'v': 54,\n            'f': \"54\",\n        },\n\"Oregon\",\n11.9,\n11.0,\n10.3,\n\"-7%\",\n\"-6%\",\n\"-13%\"],\n [{\n            'v': 55,\n            'f': \"55\",\n        },\n\"Utah\",\n4.4,\n4.3,\n4.4,\n\"-3%\",\n\"2%\",\n\"-0%\"],\n [{\n            'v': 56,\n            'f': \"56\",\n        },\n\"Washington\",\n12.1,\n12.2,\n11.7,\n\"1%\",\n\"-4%\",\n\"-3%\"],\n [{\n            'v': 57,\n            'f': \"57\",\n        },\n\"Wyoming\",\n1.3,\n0.8,\n0.9,\n\"-39%\",\n\"13%\",\n\"-32%\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"string\", \"Abortion rate aged 15-44 (2017)\"], [\"string\", \"Abortion rate among women aged 15-44 (2019)\"], [\"string\", \"Abortion rate among women aged 15-44 (2020)\"], [\"string\", \"% change in abortion rate\"], [\"string\", \"% change in abortion rate (2017-2019)\"], [\"string\", \"% change in abortion rate (2019-2020)\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 38
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           State  Abortion rate aged 15-44 (2017)  \\\n",
              "0            NaN                           2017.0   \n",
              "1  United States                             13.5   \n",
              "2            NaN                              NaN   \n",
              "3      Northeast                             20.5   \n",
              "4    Connecticut                             17.7   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2019)  \\\n",
              "0                                       2019.0   \n",
              "1                                         14.2   \n",
              "2                                          NaN   \n",
              "3                                         21.8   \n",
              "4                                         17.9   \n",
              "\n",
              "   Abortion rate among women aged 15-44 (2020) % change in abortion rate  \\\n",
              "0                                       2020.0                 2017–2019   \n",
              "1                                         14.4                        5%   \n",
              "2                                          NaN                       NaN   \n",
              "3                                         21.2                        7%   \n",
              "4                                         16.7                        1%   \n",
              "\n",
              "  % change in abortion rate (2017-2019) % change in abortion rate (2019-2020)  \n",
              "0                             2019–2020                             2017–2020  \n",
              "1                                    1%                                    7%  \n",
              "2                                   NaN                                   NaN  \n",
              "3                                   -3%                                    3%  \n",
              "4                                   -7%                                   -6%  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5bab00d4-68cf-46e6-a312-646b47b9a0b0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortion rate aged 15-44 (2017)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2019)</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2020)</th>\n",
              "      <th>% change in abortion rate</th>\n",
              "      <th>% change in abortion rate (2017-2019)</th>\n",
              "      <th>% change in abortion rate (2019-2020)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>2017.0</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>2020.0</td>\n",
              "      <td>2017–2019</td>\n",
              "      <td>2019–2020</td>\n",
              "      <td>2017–2020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>United States</td>\n",
              "      <td>13.5</td>\n",
              "      <td>14.2</td>\n",
              "      <td>14.4</td>\n",
              "      <td>5%</td>\n",
              "      <td>1%</td>\n",
              "      <td>7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Northeast</td>\n",
              "      <td>20.5</td>\n",
              "      <td>21.8</td>\n",
              "      <td>21.2</td>\n",
              "      <td>7%</td>\n",
              "      <td>-3%</td>\n",
              "      <td>3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Connecticut</td>\n",
              "      <td>17.7</td>\n",
              "      <td>17.9</td>\n",
              "      <td>16.7</td>\n",
              "      <td>1%</td>\n",
              "      <td>-7%</td>\n",
              "      <td>-6%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5bab00d4-68cf-46e6-a312-646b47b9a0b0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5bab00d4-68cf-46e6-a312-646b47b9a0b0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5bab00d4-68cf-46e6-a312-646b47b9a0b0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n{\n            'v': 2017.0,\n            'f': \"2017.0\",\n        },\n{\n            'v': 2019.0,\n            'f': \"2019.0\",\n        },\n{\n            'v': 2020.0,\n            'f': \"2020.0\",\n        },\n\"2017\\u20132019\",\n\"2019\\u20132020\",\n\"2017\\u20132020\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"United States\",\n{\n            'v': 13.5,\n            'f': \"13.5\",\n        },\n{\n            'v': 14.2,\n            'f': \"14.2\",\n        },\n{\n            'v': 14.4,\n            'f': \"14.4\",\n        },\n\"5%\",\n\"1%\",\n\"7%\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\nNaN,\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\n{\n            'v': NaN,\n            'f': \"NaN\",\n        },\nNaN,\nNaN,\nNaN],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Northeast\",\n{\n            'v': 20.5,\n            'f': \"20.5\",\n        },\n{\n            'v': 21.8,\n            'f': \"21.8\",\n        },\n{\n            'v': 21.2,\n            'f': \"21.2\",\n        },\n\"7%\",\n\"-3%\",\n\"3%\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Connecticut\",\n{\n            'v': 17.7,\n            'f': \"17.7\",\n        },\n{\n            'v': 17.9,\n            'f': \"17.9\",\n        },\n{\n            'v': 16.7,\n            'f': \"16.7\",\n        },\n\"1%\",\n\"-7%\",\n\"-6%\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"number\", \"Abortion rate aged 15-44 (2017)\"], [\"number\", \"Abortion rate among women aged 15-44 (2019)\"], [\"number\", \"Abortion rate among women aged 15-44 (2020)\"], [\"string\", \"% change in abortion rate\"], [\"string\", \"% change in abortion rate (2017-2019)\"], [\"string\", \"% change in abortion rate (2019-2020)\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 38
        }
      ],
      "source": [
        "abortionCen.replace(np.nan,\"None\")\n",
        "abortionCen.head()\n",
        "#Everything was replaced correctly"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "4imEuU3i2j86",
        "outputId": "86ea50ed-3bd8-476a-c69a-49f881ccaf95"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  Abortion rate among women aged 15-44 (2020)\n",
              "0     Alabama                                          6.0\n",
              "1      Alaska                                          8.6\n",
              "2     Arizona                                          9.3\n",
              "3    Arkansas                                          5.6\n",
              "4  California                                         19.2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e11ecfe-7de3-4006-96bc-c220ed8ca849\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2020)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>8.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>9.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>5.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>19.2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e11ecfe-7de3-4006-96bc-c220ed8ca849')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8e11ecfe-7de3-4006-96bc-c220ed8ca849 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8e11ecfe-7de3-4006-96bc-c220ed8ca849');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\n\"Alabama\",\n{\n            'v': 6.0,\n            'f': \"6.0\",\n        }],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"Alaska\",\n{\n            'v': 8.6,\n            'f': \"8.6\",\n        }],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"Arizona\",\n{\n            'v': 9.3,\n            'f': \"9.3\",\n        }],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Arkansas\",\n{\n            'v': 5.6,\n            'f': \"5.6\",\n        }],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"California\",\n{\n            'v': 19.2,\n            'f': \"19.2\",\n        }]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"number\", \"Abortion rate among women aged 15-44 (2020)\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 5
        }
      ],
      "source": [
        "abortionCen = abortionCen.groupby('State')['Abortion rate among women aged 15-44 (2020)'].sum().reset_index()\n",
        "abortionCen.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 352
        },
        "id": "Sei7BV4_8vBa",
        "outputId": "e5a4905b-4fa6-4989-cb5e-0e0618b62154"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: Total number of columns (56) exceeds max_columns (20). Falling back to pandas display.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     State Effective Date Valid Through Date  Bans_Prohibit Limited_Law  \\\n",
              "0  Alabama        12/1/18           10/28/19              1           1   \n",
              "1  Alabama       10/29/19           11/14/19              1           1   \n",
              "2  Alabama       11/15/19            6/23/22              1           1   \n",
              "3  Alabama        6/24/22            11/1/22              1           1   \n",
              "4   Alaska        12/1/18            11/1/22              1           1   \n",
              "\n",
              "  Limited_Court Limited_AG Prohibit_Req Bans_gest_Any point in pregnancy  \\\n",
              "0             1          0            1                                0   \n",
              "1             1          0            1                                0   \n",
              "2             1          0            1                                1   \n",
              "3             1          0            1                                1   \n",
              "4             1          0            0                                .   \n",
              "\n",
              "  Bans_gest_Fetal heartbeat detected  ... Methods_Prohibit  \\\n",
              "0                                  0  ...                1   \n",
              "1                                  0  ...                1   \n",
              "2                                  0  ...                1   \n",
              "3                                  0  ...                1   \n",
              "4                                  .  ...                1   \n",
              "\n",
              "  Methods_ProcedPartial-birth abortions Methods_ProcedDismemberment abortions  \\\n",
              "0                                     1                                     1   \n",
              "1                                     1                                     1   \n",
              "2                                     1                                     1   \n",
              "3                                     1                                     1   \n",
              "4                                     1                                     0   \n",
              "\n",
              "  Methods_Proced_Saline method abortions Methods_ExcLife endangerment  \\\n",
              "0                                      0                            1   \n",
              "1                                      0                            1   \n",
              "2                                      0                            1   \n",
              "3                                      0                            1   \n",
              "4                                      0                            0   \n",
              "\n",
              "  Methods_ExcSerious health risk Methods_Exc_Fetal anomaly  \\\n",
              "0                              1                         0   \n",
              "1                              1                         0   \n",
              "2                              1                         0   \n",
              "3                              1                         0   \n",
              "4                              0                         0   \n",
              "\n",
              "  Methods_Exc_No exceptions TriggerBan Bans_PreRoe  \n",
              "0                         0          0           1  \n",
              "1                         0          0           1  \n",
              "2                         0          0           1  \n",
              "3                         0          0           1  \n",
              "4                         1          0           0  \n",
              "\n",
              "[5 rows x 56 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b97c5f96-bb54-4ea9-b8e2-c3818a8f3906\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Effective Date</th>\n",
              "      <th>Valid Through Date</th>\n",
              "      <th>Bans_Prohibit</th>\n",
              "      <th>Limited_Law</th>\n",
              "      <th>Limited_Court</th>\n",
              "      <th>Limited_AG</th>\n",
              "      <th>Prohibit_Req</th>\n",
              "      <th>Bans_gest_Any point in pregnancy</th>\n",
              "      <th>Bans_gest_Fetal heartbeat detected</th>\n",
              "      <th>...</th>\n",
              "      <th>Methods_Prohibit</th>\n",
              "      <th>Methods_ProcedPartial-birth abortions</th>\n",
              "      <th>Methods_ProcedDismemberment abortions</th>\n",
              "      <th>Methods_Proced_Saline method abortions</th>\n",
              "      <th>Methods_ExcLife endangerment</th>\n",
              "      <th>Methods_ExcSerious health risk</th>\n",
              "      <th>Methods_Exc_Fetal anomaly</th>\n",
              "      <th>Methods_Exc_No exceptions</th>\n",
              "      <th>TriggerBan</th>\n",
              "      <th>Bans_PreRoe</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>10/28/19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>10/29/19</td>\n",
              "      <td>11/14/19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>11/15/19</td>\n",
              "      <td>6/23/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6/24/22</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 56 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b97c5f96-bb54-4ea9-b8e2-c3818a8f3906')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b97c5f96-bb54-4ea9-b8e2-c3818a8f3906 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b97c5f96-bb54-4ea9-b8e2-c3818a8f3906');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "abortionban=pd.read_csv(\"https://raw.githubusercontent.com/Mmarlo5/psychic-doodle/main/Statistical%20Data-Table%201.csv\")\n",
        "abortionban.head()\n",
        "#This dataset lists the same country multiple times because of the effective data of the restrictions by state"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 540
        },
        "id": "H03W1bNuN3Uz",
        "outputId": "acea4cc6-7596-4a9f-9921-76ff6df55932"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: Total number of columns (56) exceeds max_columns (20). Falling back to pandas display.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       State Effective Date Valid Through Date  Bans_Prohibit Limited_Law  \\\n",
              "0    Alabama        12/1/18           10/28/19              1           1   \n",
              "1    Alabama       10/29/19           11/14/19              1           1   \n",
              "2    Alabama       11/15/19            6/23/22              1           1   \n",
              "3    Alabama        6/24/22            11/1/22              1           1   \n",
              "4     Alaska        12/1/18            11/1/22              1           1   \n",
              "..       ...            ...                ...            ...         ...   \n",
              "236  Wyoming         7/1/21            3/14/22              1           0   \n",
              "237  Wyoming        3/15/22            7/26/22              1           0   \n",
              "238  Wyoming        7/27/22            7/27/22              1           1   \n",
              "239  Wyoming        7/28/22             8/9/22              1           1   \n",
              "240  Wyoming        8/10/22            11/1/22              1           1   \n",
              "\n",
              "    Limited_Court Limited_AG Prohibit_Req Bans_gest_Any point in pregnancy  \\\n",
              "0               1          0            1                                0   \n",
              "1               1          0            1                                0   \n",
              "2               1          0            1                                1   \n",
              "3               1          0            1                                1   \n",
              "4               1          0            0                                .   \n",
              "..            ...        ...          ...                              ...   \n",
              "236             .          .            1                                0   \n",
              "237             .          .            1                                0   \n",
              "238             1          0            1                                1   \n",
              "239             1          0            1                                1   \n",
              "240             1          0            1                                1   \n",
              "\n",
              "    Bans_gest_Fetal heartbeat detected  ... Methods_Prohibit  \\\n",
              "0                                    0  ...                1   \n",
              "1                                    0  ...                1   \n",
              "2                                    0  ...                1   \n",
              "3                                    0  ...                1   \n",
              "4                                    .  ...                1   \n",
              "..                                 ...  ...              ...   \n",
              "236                                  0  ...                0   \n",
              "237                                  0  ...                0   \n",
              "238                                  0  ...                0   \n",
              "239                                  0  ...                0   \n",
              "240                                  0  ...                0   \n",
              "\n",
              "    Methods_ProcedPartial-birth abortions  \\\n",
              "0                                       1   \n",
              "1                                       1   \n",
              "2                                       1   \n",
              "3                                       1   \n",
              "4                                       1   \n",
              "..                                    ...   \n",
              "236                                     .   \n",
              "237                                     .   \n",
              "238                                     .   \n",
              "239                                     .   \n",
              "240                                     .   \n",
              "\n",
              "    Methods_ProcedDismemberment abortions  \\\n",
              "0                                       1   \n",
              "1                                       1   \n",
              "2                                       1   \n",
              "3                                       1   \n",
              "4                                       0   \n",
              "..                                    ...   \n",
              "236                                     .   \n",
              "237                                     .   \n",
              "238                                     .   \n",
              "239                                     .   \n",
              "240                                     .   \n",
              "\n",
              "    Methods_Proced_Saline method abortions Methods_ExcLife endangerment  \\\n",
              "0                                        0                            1   \n",
              "1                                        0                            1   \n",
              "2                                        0                            1   \n",
              "3                                        0                            1   \n",
              "4                                        0                            0   \n",
              "..                                     ...                          ...   \n",
              "236                                      .                            .   \n",
              "237                                      .                            .   \n",
              "238                                      .                            .   \n",
              "239                                      .                            .   \n",
              "240                                      .                            .   \n",
              "\n",
              "    Methods_ExcSerious health risk Methods_Exc_Fetal anomaly  \\\n",
              "0                                1                         0   \n",
              "1                                1                         0   \n",
              "2                                1                         0   \n",
              "3                                1                         0   \n",
              "4                                0                         0   \n",
              "..                             ...                       ...   \n",
              "236                              .                         .   \n",
              "237                              .                         .   \n",
              "238                              .                         .   \n",
              "239                              .                         .   \n",
              "240                              .                         .   \n",
              "\n",
              "    Methods_Exc_No exceptions TriggerBan Bans_PreRoe  \n",
              "0                           0          0           1  \n",
              "1                           0          0           1  \n",
              "2                           0          0           1  \n",
              "3                           0          0           1  \n",
              "4                           1          0           0  \n",
              "..                        ...        ...         ...  \n",
              "236                         .          0           0  \n",
              "237                         .          0           0  \n",
              "238                         .          1           0  \n",
              "239                         .          1           0  \n",
              "240                         .          1           0  \n",
              "\n",
              "[241 rows x 56 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a04d4491-91ef-48da-b7eb-a2aa36974832\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Effective Date</th>\n",
              "      <th>Valid Through Date</th>\n",
              "      <th>Bans_Prohibit</th>\n",
              "      <th>Limited_Law</th>\n",
              "      <th>Limited_Court</th>\n",
              "      <th>Limited_AG</th>\n",
              "      <th>Prohibit_Req</th>\n",
              "      <th>Bans_gest_Any point in pregnancy</th>\n",
              "      <th>Bans_gest_Fetal heartbeat detected</th>\n",
              "      <th>...</th>\n",
              "      <th>Methods_Prohibit</th>\n",
              "      <th>Methods_ProcedPartial-birth abortions</th>\n",
              "      <th>Methods_ProcedDismemberment abortions</th>\n",
              "      <th>Methods_Proced_Saline method abortions</th>\n",
              "      <th>Methods_ExcLife endangerment</th>\n",
              "      <th>Methods_ExcSerious health risk</th>\n",
              "      <th>Methods_Exc_Fetal anomaly</th>\n",
              "      <th>Methods_Exc_No exceptions</th>\n",
              "      <th>TriggerBan</th>\n",
              "      <th>Bans_PreRoe</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>10/28/19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>10/29/19</td>\n",
              "      <td>11/14/19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>11/15/19</td>\n",
              "      <td>6/23/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6/24/22</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>236</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>7/1/21</td>\n",
              "      <td>3/14/22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>237</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>3/15/22</td>\n",
              "      <td>7/26/22</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>238</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>7/27/22</td>\n",
              "      <td>7/27/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>239</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>7/28/22</td>\n",
              "      <td>8/9/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>240</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>8/10/22</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>241 rows × 56 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a04d4491-91ef-48da-b7eb-a2aa36974832')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a04d4491-91ef-48da-b7eb-a2aa36974832 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a04d4491-91ef-48da-b7eb-a2aa36974832');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "abortionban.replace(np.nan,\"None\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 610
        },
        "id": "vRDwq_j2OVlx",
        "outputId": "46d8afa4-83f9-46bb-e4ea-80dc5d91ad5b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: Total number of columns (58) exceeds max_columns (20). Falling back to pandas display.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       State  Abortion rate among women aged 15-44 (2020) Effective Date  \\\n",
              "0    Alabama                                          6.0        12/1/18   \n",
              "1    Alabama                                          6.0       10/29/19   \n",
              "2    Alabama                                          6.0       11/15/19   \n",
              "3    Alabama                                          6.0        6/24/22   \n",
              "4     Alaska                                          8.6        12/1/18   \n",
              "..       ...                                          ...            ...   \n",
              "241  Wyoming                                          0.9         7/1/21   \n",
              "242  Wyoming                                          0.9        3/15/22   \n",
              "243  Wyoming                                          0.9        7/27/22   \n",
              "244  Wyoming                                          0.9        7/28/22   \n",
              "245  Wyoming                                          0.9        8/10/22   \n",
              "\n",
              "    Valid Through Date  Bans_Prohibit Limited_Law Limited_Court Limited_AG  \\\n",
              "0             10/28/19            1.0           1             1          0   \n",
              "1             11/14/19            1.0           1             1          0   \n",
              "2              6/23/22            1.0           1             1          0   \n",
              "3              11/1/22            1.0           1             1          0   \n",
              "4              11/1/22            1.0           1             1          0   \n",
              "..                 ...            ...         ...           ...        ...   \n",
              "241            3/14/22            1.0           0             .          .   \n",
              "242            7/26/22            1.0           0             .          .   \n",
              "243            7/27/22            1.0           1             1          0   \n",
              "244             8/9/22            1.0           1             1          0   \n",
              "245            11/1/22            1.0           1             1          0   \n",
              "\n",
              "    Prohibit_Req Bans_gest_Any point in pregnancy  ...  \\\n",
              "0              1                                0  ...   \n",
              "1              1                                0  ...   \n",
              "2              1                                1  ...   \n",
              "3              1                                1  ...   \n",
              "4              0                                .  ...   \n",
              "..           ...                              ...  ...   \n",
              "241            1                                0  ...   \n",
              "242            1                                0  ...   \n",
              "243            1                                1  ...   \n",
              "244            1                                1  ...   \n",
              "245            1                                1  ...   \n",
              "\n",
              "    Methods_ProcedPartial-birth abortions  \\\n",
              "0                                       1   \n",
              "1                                       1   \n",
              "2                                       1   \n",
              "3                                       1   \n",
              "4                                       1   \n",
              "..                                    ...   \n",
              "241                                     .   \n",
              "242                                     .   \n",
              "243                                     .   \n",
              "244                                     .   \n",
              "245                                     .   \n",
              "\n",
              "    Methods_ProcedDismemberment abortions  \\\n",
              "0                                       1   \n",
              "1                                       1   \n",
              "2                                       1   \n",
              "3                                       1   \n",
              "4                                       0   \n",
              "..                                    ...   \n",
              "241                                     .   \n",
              "242                                     .   \n",
              "243                                     .   \n",
              "244                                     .   \n",
              "245                                     .   \n",
              "\n",
              "    Methods_Proced_Saline method abortions Methods_ExcLife endangerment  \\\n",
              "0                                        0                            1   \n",
              "1                                        0                            1   \n",
              "2                                        0                            1   \n",
              "3                                        0                            1   \n",
              "4                                        0                            0   \n",
              "..                                     ...                          ...   \n",
              "241                                      .                            .   \n",
              "242                                      .                            .   \n",
              "243                                      .                            .   \n",
              "244                                      .                            .   \n",
              "245                                      .                            .   \n",
              "\n",
              "    Methods_ExcSerious health risk Methods_Exc_Fetal anomaly  \\\n",
              "0                                1                         0   \n",
              "1                                1                         0   \n",
              "2                                1                         0   \n",
              "3                                1                         0   \n",
              "4                                0                         0   \n",
              "..                             ...                       ...   \n",
              "241                              .                         .   \n",
              "242                              .                         .   \n",
              "243                              .                         .   \n",
              "244                              .                         .   \n",
              "245                              .                         .   \n",
              "\n",
              "    Methods_Exc_No exceptions TriggerBan Bans_PreRoe _merge  \n",
              "0                           0          0           1   both  \n",
              "1                           0          0           1   both  \n",
              "2                           0          0           1   both  \n",
              "3                           0          0           1   both  \n",
              "4                           1          0           0   both  \n",
              "..                        ...        ...         ...    ...  \n",
              "241                         .          0           0   both  \n",
              "242                         .          0           0   both  \n",
              "243                         .          1           0   both  \n",
              "244                         .          1           0   both  \n",
              "245                         .          1           0   both  \n",
              "\n",
              "[246 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2881587a-91f7-4c85-8ffe-071ee5d86142\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortion rate among women aged 15-44 (2020)</th>\n",
              "      <th>Effective Date</th>\n",
              "      <th>Valid Through Date</th>\n",
              "      <th>Bans_Prohibit</th>\n",
              "      <th>Limited_Law</th>\n",
              "      <th>Limited_Court</th>\n",
              "      <th>Limited_AG</th>\n",
              "      <th>Prohibit_Req</th>\n",
              "      <th>Bans_gest_Any point in pregnancy</th>\n",
              "      <th>...</th>\n",
              "      <th>Methods_ProcedPartial-birth abortions</th>\n",
              "      <th>Methods_ProcedDismemberment abortions</th>\n",
              "      <th>Methods_Proced_Saline method abortions</th>\n",
              "      <th>Methods_ExcLife endangerment</th>\n",
              "      <th>Methods_ExcSerious health risk</th>\n",
              "      <th>Methods_Exc_Fetal anomaly</th>\n",
              "      <th>Methods_Exc_No exceptions</th>\n",
              "      <th>TriggerBan</th>\n",
              "      <th>Bans_PreRoe</th>\n",
              "      <th>_merge</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.0</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>10/28/19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.0</td>\n",
              "      <td>10/29/19</td>\n",
              "      <td>11/14/19</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.0</td>\n",
              "      <td>11/15/19</td>\n",
              "      <td>6/23/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>6.0</td>\n",
              "      <td>6/24/22</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>8.6</td>\n",
              "      <td>12/1/18</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>241</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>0.9</td>\n",
              "      <td>7/1/21</td>\n",
              "      <td>3/14/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>242</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>0.9</td>\n",
              "      <td>3/15/22</td>\n",
              "      <td>7/26/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>243</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>0.9</td>\n",
              "      <td>7/27/22</td>\n",
              "      <td>7/27/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>244</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>0.9</td>\n",
              "      <td>7/28/22</td>\n",
              "      <td>8/9/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>245</th>\n",
              "      <td>Wyoming</td>\n",
              "      <td>0.9</td>\n",
              "      <td>8/10/22</td>\n",
              "      <td>11/1/22</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>.</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>both</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>246 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2881587a-91f7-4c85-8ffe-071ee5d86142')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2881587a-91f7-4c85-8ffe-071ee5d86142 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2881587a-91f7-4c85-8ffe-071ee5d86142');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "abortionmerge = pd.merge(abortionCen, abortionban, how='outer', on=['State'],indicator=True)\n",
        "abortionmerge\n",
        "#Changed None back to NaN - Fix again! "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "Ef82m2pGQQ5H",
        "outputId": "3b2b3745-2d81-4bd6-e983-159bc654ab88"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Area Abortions reported by area of occurrence** Unnamed: 2 Unnamed: 3  \\\n",
              "0       NaN                                        No.       Rate      Ratio   \n",
              "1   Alabama                                      5,713        6.0         99   \n",
              "2    Alaska                                      1,206        8.4        127   \n",
              "3   Arizona                                     13,273        9.3        172   \n",
              "4  Arkansas                                      3,154        5.4         89   \n",
              "\n",
              "  Abortions obtained by out-of-area residents  \n",
              "0                                     No. (%)  \n",
              "1                                  875 (15.3)  \n",
              "2                                     8 (0.7)  \n",
              "3                                    72 (0.5)  \n",
              "4                                  390 (12.4)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-22799514-5b77-4532-ade6-418dae9cac84\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Area</th>\n",
              "      <th>Abortions reported by area of occurrence**</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Abortions obtained by out-of-area residents</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>No.</td>\n",
              "      <td>Rate</td>\n",
              "      <td>Ratio</td>\n",
              "      <td>No. (%)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>5,713</td>\n",
              "      <td>6.0</td>\n",
              "      <td>99</td>\n",
              "      <td>875 (15.3)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>1,206</td>\n",
              "      <td>8.4</td>\n",
              "      <td>127</td>\n",
              "      <td>8 (0.7)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>13,273</td>\n",
              "      <td>9.3</td>\n",
              "      <td>172</td>\n",
              "      <td>72 (0.5)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>3,154</td>\n",
              "      <td>5.4</td>\n",
              "      <td>89</td>\n",
              "      <td>390 (12.4)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22799514-5b77-4532-ade6-418dae9cac84')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-22799514-5b77-4532-ade6-418dae9cac84 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-22799514-5b77-4532-ade6-418dae9cac84');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n\"No.\",\n\"Rate\",\n\"Ratio\",\n\"No. (%)\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"Alabama\",\n\"5,713\",\n\"6.0\",\n\"99\",\n\"875 (15.3)\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"Alaska\",\n\"1,206\",\n\"8.4\",\n\"127\",\n\"8 (0.7)\"],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Arizona\",\n\"13,273\",\n\"9.3\",\n\"172\",\n\"72 (0.5)\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Arkansas\",\n\"3,154\",\n\"5.4\",\n\"89\",\n\"390 (12.4)\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"Area\"], [\"string\", \"Abortions reported by area of occurrence**\"], [\"string\", \"Unnamed: 2\"], [\"string\", \"Unnamed: 3\"], [\"string\", \"Abortions obtained by out-of-area residents\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 21
        }
      ],
      "source": [
        "abortionCDC = pd.read_csv(\"https://raw.githubusercontent.com/Mmarlo5/psychic-doodle/main/CDC_Data%20Abortion.csv\")\n",
        "abortionCDC.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "uIflLxIBQ8Nd",
        "outputId": "e185c80d-a030-42f1-f466-5a3fd7d85385"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      State Abortions reported by area of occurrence** Unnamed: 2 Unnamed: 3  \\\n",
              "0       NaN                                        No.       Rate      Ratio   \n",
              "1   Alabama                                      5,713        6.0         99   \n",
              "2    Alaska                                      1,206        8.4        127   \n",
              "3   Arizona                                     13,273        9.3        172   \n",
              "4  Arkansas                                      3,154        5.4         89   \n",
              "\n",
              "  Abortions obtained by out-of-area residents  \n",
              "0                                     No. (%)  \n",
              "1                                  875 (15.3)  \n",
              "2                                     8 (0.7)  \n",
              "3                                    72 (0.5)  \n",
              "4                                  390 (12.4)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fc25ec85-24eb-4146-8361-78fcbfa2301f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortions reported by area of occurrence**</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Abortions obtained by out-of-area residents</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>No.</td>\n",
              "      <td>Rate</td>\n",
              "      <td>Ratio</td>\n",
              "      <td>No. (%)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>5,713</td>\n",
              "      <td>6.0</td>\n",
              "      <td>99</td>\n",
              "      <td>875 (15.3)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>1,206</td>\n",
              "      <td>8.4</td>\n",
              "      <td>127</td>\n",
              "      <td>8 (0.7)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>13,273</td>\n",
              "      <td>9.3</td>\n",
              "      <td>172</td>\n",
              "      <td>72 (0.5)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>3,154</td>\n",
              "      <td>5.4</td>\n",
              "      <td>89</td>\n",
              "      <td>390 (12.4)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc25ec85-24eb-4146-8361-78fcbfa2301f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fc25ec85-24eb-4146-8361-78fcbfa2301f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fc25ec85-24eb-4146-8361-78fcbfa2301f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n\"No.\",\n\"Rate\",\n\"Ratio\",\n\"No. (%)\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"Alabama\",\n\"5,713\",\n\"6.0\",\n\"99\",\n\"875 (15.3)\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"Alaska\",\n\"1,206\",\n\"8.4\",\n\"127\",\n\"8 (0.7)\"],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Arizona\",\n\"13,273\",\n\"9.3\",\n\"172\",\n\"72 (0.5)\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Arkansas\",\n\"3,154\",\n\"5.4\",\n\"89\",\n\"390 (12.4)\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"string\", \"Abortions reported by area of occurrence**\"], [\"string\", \"Unnamed: 2\"], [\"string\", \"Unnamed: 3\"], [\"string\", \"Abortions obtained by out-of-area residents\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "abortionCDC =abortionCDC.rename(columns = {'Area': 'State'})\n",
        "abortionCDC.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "liAk4xY3T3-L",
        "outputId": "fb7ea523-70d3-4725-e808-344a115885d2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      State Abortions reported by area of occurrence** Number of abortions  \\\n",
              "0       NaN                                        No.                Rate   \n",
              "1   Alabama                                      5,713                 6.0   \n",
              "2    Alaska                                      1,206                 8.4   \n",
              "3   Arizona                                     13,273                 9.3   \n",
              "4  Arkansas                                      3,154                 5.4   \n",
              "\n",
              "  Unnamed: 3 Abortions obtained by out-of-area residents  \n",
              "0      Ratio                                     No. (%)  \n",
              "1         99                                  875 (15.3)  \n",
              "2        127                                     8 (0.7)  \n",
              "3        172                                    72 (0.5)  \n",
              "4         89                                  390 (12.4)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5f04bb76-58b9-4404-a776-b727febce6b2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortions reported by area of occurrence**</th>\n",
              "      <th>Number of abortions</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Abortions obtained by out-of-area residents</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>No.</td>\n",
              "      <td>Rate</td>\n",
              "      <td>Ratio</td>\n",
              "      <td>No. (%)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>5,713</td>\n",
              "      <td>6.0</td>\n",
              "      <td>99</td>\n",
              "      <td>875 (15.3)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>1,206</td>\n",
              "      <td>8.4</td>\n",
              "      <td>127</td>\n",
              "      <td>8 (0.7)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>13,273</td>\n",
              "      <td>9.3</td>\n",
              "      <td>172</td>\n",
              "      <td>72 (0.5)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>3,154</td>\n",
              "      <td>5.4</td>\n",
              "      <td>89</td>\n",
              "      <td>390 (12.4)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f04bb76-58b9-4404-a776-b727febce6b2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5f04bb76-58b9-4404-a776-b727febce6b2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5f04bb76-58b9-4404-a776-b727febce6b2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n\"No.\",\n\"Rate\",\n\"Ratio\",\n\"No. (%)\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"Alabama\",\n\"5,713\",\n\"6.0\",\n\"99\",\n\"875 (15.3)\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"Alaska\",\n\"1,206\",\n\"8.4\",\n\"127\",\n\"8 (0.7)\"],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Arizona\",\n\"13,273\",\n\"9.3\",\n\"172\",\n\"72 (0.5)\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Arkansas\",\n\"3,154\",\n\"5.4\",\n\"89\",\n\"390 (12.4)\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"string\", \"Abortions reported by area of occurrence**\"], [\"string\", \"Number of abortions\"], [\"string\", \"Unnamed: 3\"], [\"string\", \"Abortions obtained by out-of-area residents\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "abortionCDC =abortionCDC.rename(columns = {'Unnamed: 2': 'Number of abortions'})\n",
        "abortionCDC.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 197
        },
        "id": "UGW4gJqEUAIV",
        "outputId": "a0a93553-0377-41d0-9d32-bfe2328cf8b3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      State Abortions reported by area of occurrence** Number of abortions  \\\n",
              "0       NaN                                        No.                Rate   \n",
              "1   Alabama                                      5,713                 6.0   \n",
              "2    Alaska                                      1,206                 8.4   \n",
              "3   Arizona                                     13,273                 9.3   \n",
              "4  Arkansas                                      3,154                 5.4   \n",
              "\n",
              "  Rate of abortion Abortions obtained by out-of-area residents  \n",
              "0            Ratio                                     No. (%)  \n",
              "1               99                                  875 (15.3)  \n",
              "2              127                                     8 (0.7)  \n",
              "3              172                                    72 (0.5)  \n",
              "4               89                                  390 (12.4)  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-97c63730-3ec9-4d05-8ba4-db884a5719a5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Abortions reported by area of occurrence**</th>\n",
              "      <th>Number of abortions</th>\n",
              "      <th>Rate of abortion</th>\n",
              "      <th>Abortions obtained by out-of-area residents</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>No.</td>\n",
              "      <td>Rate</td>\n",
              "      <td>Ratio</td>\n",
              "      <td>No. (%)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>5,713</td>\n",
              "      <td>6.0</td>\n",
              "      <td>99</td>\n",
              "      <td>875 (15.3)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>1,206</td>\n",
              "      <td>8.4</td>\n",
              "      <td>127</td>\n",
              "      <td>8 (0.7)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>13,273</td>\n",
              "      <td>9.3</td>\n",
              "      <td>172</td>\n",
              "      <td>72 (0.5)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>3,154</td>\n",
              "      <td>5.4</td>\n",
              "      <td>89</td>\n",
              "      <td>390 (12.4)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97c63730-3ec9-4d05-8ba4-db884a5719a5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-97c63730-3ec9-4d05-8ba4-db884a5719a5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-97c63730-3ec9-4d05-8ba4-db884a5719a5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/99dac6621f6ae8c4/data_table.js\";\n\n      window.createDataTable({\n        data: [[{\n            'v': 0,\n            'f': \"0\",\n        },\nNaN,\n\"No.\",\n\"Rate\",\n\"Ratio\",\n\"No. (%)\"],\n [{\n            'v': 1,\n            'f': \"1\",\n        },\n\"Alabama\",\n\"5,713\",\n\"6.0\",\n\"99\",\n\"875 (15.3)\"],\n [{\n            'v': 2,\n            'f': \"2\",\n        },\n\"Alaska\",\n\"1,206\",\n\"8.4\",\n\"127\",\n\"8 (0.7)\"],\n [{\n            'v': 3,\n            'f': \"3\",\n        },\n\"Arizona\",\n\"13,273\",\n\"9.3\",\n\"172\",\n\"72 (0.5)\"],\n [{\n            'v': 4,\n            'f': \"4\",\n        },\n\"Arkansas\",\n\"3,154\",\n\"5.4\",\n\"89\",\n\"390 (12.4)\"]],\n        columns: [[\"number\", \"index\"], [\"string\", \"State\"], [\"string\", \"Abortions reported by area of occurrence**\"], [\"string\", \"Number of abortions\"], [\"string\", \"Rate of abortion\"], [\"string\", \"Abortions obtained by out-of-area residents\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 12
        }
      ],
      "source": [
        "abortionCDC =abortionCDC.rename(columns = {'Unnamed: 3': 'Rate of abortion'})\n",
        "abortionCDC.head()\n",
        "#Data would not be renamed without doing seperate code."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Vb7luN85U8rt"
      },
      "source": [
        "**Data Visualization Section**\n",
        "Contains four graphs that seek to better understand my research question."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 748
        },
        "id": "ruYG2tNCoYPu",
        "outputId": "b185e6ae-ee31-457c-f515-fe246f2ca4c0"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 56 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Abortion rate among women aged 15-44')"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'State')"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Abortion Rates by State - 2020')"
            ]
          },
          "metadata": {},
          "execution_count": 13
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x864 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "abortionmerge = abortionCen[['State', 'Abortion rate among women aged 15-44 (2020)']]\n",
        "\n",
        "# drop any rows with missing data\n",
        "abortionmerge = abortionmerge.dropna()\n",
        "\n",
        "# sort the data by descending order of abortion rate\n",
        "abortionmerge = abortionmerge.sort_values(by='Abortion rate among women aged 15-44 (2020)', ascending=False)\n",
        "\n",
        "# create a horizontal bar chart\n",
        "fig, ax = plt.subplots(figsize=(8, 12))\n",
        "ax.barh(abortionmerge['State'], abortionmerge['Abortion rate among women aged 15-44 (2020)'])\n",
        "ax.set_xlabel('Abortion rate among women aged 15-44')\n",
        "ax.set_ylabel('State')\n",
        "ax.set_title('Abortion Rates by State - 2020')\n",
        "plt.show()\n",
        "#This graph shows the the number of abortions by state in order from least to most abortions by U.S state. \n",
        "#I expected Missouri to not show up on the graph because the rate of abortion in Missouri was really low (0.1)\n",
        "#District of Columbia seems really high. "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "tNBa6w9ZcWPh",
        "outputId": "83822c3d-85c5-4e10-dea7-af93e51730bf"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x1440 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "\n",
        "data = {\n",
        "    'Alabama': [5713, 875],\n",
        "    'Alaska': [1206, 8],\n",
        "    'Arizona': [13273, 72],\n",
        "    'Arkansas': [3154, 390],\n",
        "    'Colorado': [9869, 1283],\n",
        "    'Connecticut': [9115, 456],\n",
        "    'Delaware': [2281, 272],\n",
        "    'District of Columbia': [4416, 3123],\n",
        "    'Florida': [74868, 3988],\n",
        "    'Georgia': [37533, 6411],\n",
        "    'Hawaii': [1809, 32],\n",
        "    'Idaho': [1680, 102],\n",
        "    'Illinois': [46243, 9686],\n",
        "    'Indiana': [7756, 384],\n",
        "    'Iowa': [4058, 679],\n",
        "    'Kansas': [7526, 3901],\n",
        "    'Kentucky': [4104, 617],\n",
        "    'Louisiana': [7473, 1240],\n",
        "    'Maine': [2064, 115],\n",
        "    'Massachusetts': [16452, 593],\n",
        "    'Michigan': [29669, 1620],\n",
        "    'Minnesota': [10349, 971],\n",
        "    'Mississippi': [3559, 360],\n",
        "    'Missouri': [167, 33],\n",
        "    'Montana': [1675, 177],\n",
        "    'Nebraska': [2378, 374],\n",
        "    'Nevada': [8633, 471],\n",
        "    'New Jersey': [22972, 1593],\n",
        "    'New Mexico': [4293, 1301],\n",
        "    'New York City': [37523, 3195],\n",
        "    'New York State': [25619, 2469],\n",
        "    'North Carolina': [30004, 5117],\n",
        "    'North Dakota': [1174, 338],\n",
        "    'Ohio': [20605, 1167],\n",
        "    'Oklahoma': [3797, 598],\n",
        "    'Oregon': [6991, 672],\n",
        "    'Pennsylvania': [32123, 2144],\n",
        "    'Rhode Island': [2611, 424],\n",
        "    'South Carolina': [5468, 278],\n",
        "    'South Dakota': [125, 19],\n",
        "    'Tennessee': [11243, 0],\n",
        "    'Texas': [55132, 1183],\n",
        "    'Utah': [2362, 118],\n",
        "    'Vermont': [1227, 213],\n",
        "    'Virginia': [15604, 1067],\n",
        "    'Washington': [16909, 852],\n",
        "    'West Virginia': [1001, 152],\n",
        "    'Wisconsin': [6430, 94],\n",
        "    'Wyoming': [91, 22]\n",
        "}\n",
        "df = pd.DataFrame(data).transpose()\n",
        "df.columns = ['No.', 'Out of Area']\n",
        "\n",
        "# Calculate percentage of out of area abortions\n",
        "df['Out of Area %'] = round(df['Out of Area'] / df['No.'] * 100, 1)\n",
        "\n",
        "# Sort by percentage of out of area abortions\n",
        "df = df.sort_values('Out of Area %')\n",
        "\n",
        "# Create a horizontal stacked bar chart\n",
        "ax = df[['Out of Area %', 'No.']].plot(kind='barh', stacked=True, figsize=(10,20),\n",
        "                                       color=['Pink', 'Teal'], legend=False)\n",
        "#This graph visualizes out of state abortions\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "id": "Vk2BipemXGs7",
        "outputId": "09137d82-f05c-42c9-d747-ed5f7d409343"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 4 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Abortion Rates by Region in 2020')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Region')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Abortion Rate (%)')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 21.7, '21.2')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(1, 11.7, '11.2')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(2, 13.4, '12.9')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(3, 15.4, '14.9')"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# data for the chart\n",
        "regions = ['Northeast', 'Midwest', 'South', 'West']\n",
        "abortion_rates = [21.2, 11.2, 12.9, 14.9]\n",
        "\n",
        "# bar chart\n",
        "plt.bar(regions, abortion_rates)\n",
        "\n",
        "# set the chart title and axis labels\n",
        "plt.title('Abortion Rates by Region in 2020')\n",
        "plt.xlabel('Region')\n",
        "plt.ylabel('Abortion Rate (%)')\n",
        "\n",
        "# labels for the values on top of the bars\n",
        "for i, v in enumerate(abortion_rates):\n",
        " plt.text(i, v + 0.5, str(v), ha='center')\n",
        "\n",
        "# display the chart\n",
        "plt.show()\n",
        "\n",
        "#This graph shows that the highest percentage of abortions in 2020 were located in the Northeast\n",
        "#I also expected this result because due to the above graph which showed that the states in the Northeast seemed to have a higher percentage of abortions."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 639
        },
        "id": "2xNBYFyhw5-X",
        "outputId": "ec954b1a-3e26-45b1-cf94-7137097db4d3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 2 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Number of States with and without Abortion Ban')"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Number of States')"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 576x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Data\n",
        "states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n",
        "codes = [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0]\n",
        "\n",
        "num_bans = sum(codes)\n",
        "num_no_bans = len(codes) - num_bans\n",
        "\n",
        "# Create horizontal bar chart\n",
        "fig, ax = plt.subplots(figsize=(8, 10))\n",
        "ax.barh(['With Ban', 'Without Ban'], [num_bans, num_no_bans], color=['red', 'blue'])\n",
        "ax.set_title('Number of States with and without Abortion Ban')\n",
        "ax.set_xlabel('Number of States')\n",
        "plt.show()\n",
        "#This graph shows that more states do not have bans compared to states that do have bans. \n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "14ONECS8dk_6",
        "outputId": "63f5f4f3-a2f8-4d80-fe2c-b8e4ce9a3201"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7ff23b9b0cd0>"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7ff23b9c81f0>]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Number of Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Percentage of Out-of-State Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Relationship between Number of Abortions and Out-of-State Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# Fit a linear regression line to the data\n",
        "z = np.polyfit(df['No.'], df['Out of Area %'], 1)\n",
        "p = np.poly1d(z)\n",
        "\n",
        "# Create scatter plot\n",
        "plt.scatter(df['No.'], df['Out of Area %'])\n",
        "\n",
        "# Add trend line\n",
        "plt.plot(df['No.'],p(df['No.']),\"r--\")\n",
        "\n",
        "# Set axis labels and title\n",
        "plt.xlabel('Number of Abortions')\n",
        "plt.ylabel('Percentage of Out-of-State Abortions')\n",
        "plt.title('Relationship between Number of Abortions and Out-of-State Abortions')\n",
        "\n",
        "# Show plot\n",
        "plt.show()\n",
        "\n",
        "#This graph shows that there is a slight correlation between the number of abortions and the percentage of out-of-state abortions"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Convert x and y to percentages\n",
        "x = df['No.'] / df['No.'].sum() * 100\n",
        "y = df['Out of Area %']\n",
        "\n",
        "# Fit a linear regression line to the data\n",
        "z = np.polyfit(x, y, 1)\n",
        "p = np.poly1d(z)\n",
        "\n",
        "# Create scatter plot\n",
        "plt.scatter(x, y)\n",
        "\n",
        "# Add trend line\n",
        "plt.plot(x, p(x), \"r--\")\n",
        "\n",
        "# Set axis labels and title\n",
        "plt.xlabel('Percentage of Total Abortions')\n",
        "plt.ylabel('Percentage of Out-of-State Abortions')\n",
        "plt.title('Relationship between Percentage of Total Abortions and Out-of-State Abortions')\n",
        "\n",
        "# Label outliers\n",
        "outliers = np.where(y > np.percentile(y, 75) + 1.5 * (np.percentile(y, 75) - np.percentile(y, 25)))\n",
        "for i in outliers[0]:\n",
        "    plt.annotate(str(i+1), (x[i], y[i]))\n",
        "\n",
        "# Show plot\n",
        "plt.show()\n",
        "#This is the updated code where I added labels to the outliers. "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "YetfVGOciVNY",
        "outputId": "b6a2562a-6c9b-4bdd-fd37-2f9f234eedca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.collections.PathCollection at 0x7ff23b88cf40>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7ff23b9083a0>]"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Percentage of Total Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Percentage of Out-of-State Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Relationship between Percentage of Total Abortions and Out-of-State Abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(1.2132310861851894, 51.8, '48')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.7118826038524843, 70.7, '49')"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "ffXZw3xnyBgj",
        "outputId": "5ec04fa5-7258-42c2-effc-a989318ed1e1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Abortion ban by state')"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Percentage of abortions')"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Percentage of abortions by state with respect to abortion ban')"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.axis.XTick at 0x7ff23baf8ca0>,\n",
              " <matplotlib.axis.XTick at 0x7ff23baf8c40>]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0.0, 0, 'Ban exists'), Text(0.35, 0, 'No ban')]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ff23b941910>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# Data - percentage of abortions by state\n",
        "abortion_pct = [20, 24, 15, 18, 27, 22, 30, 32, 16, 19, 23, 21, 33, 26, 29, 35, 17, 25, 31, 28, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51]\n",
        "\n",
        "# Data - abortion ban by state\n",
        "abortion_ban = [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n",
        "\n",
        "# Calculate the mean abortion percentage for each group\n",
        "banned_pct = np.mean([abortion_pct[i] for i in range(len(abortion_pct)) if abortion_ban[i] == 1])\n",
        "not_banned_pct = np.mean([abortion_pct[i] for i in range(len(abortion_pct)) if abortion_ban[i] == 0])\n",
        "\n",
        "# Create the bar chart\n",
        "fig, ax = plt.subplots()\n",
        "bar_width = 0.35\n",
        "opacity = 0.8\n",
        "rects1 = ax.bar(0, banned_pct, bar_width,\n",
        "                alpha=opacity, color='b',\n",
        "                label='Abortion ban exists')\n",
        "rects2 = ax.bar(bar_width, not_banned_pct, bar_width,\n",
        "                alpha=opacity, color='g',\n",
        "                label='No abortion ban')\n",
        "\n",
        "# Add labels, title, and legend\n",
        "ax.set_xlabel('Abortion ban by state')\n",
        "ax.set_ylabel('Percentage of abortions')\n",
        "ax.set_title('Percentage of abortions by state with respect to abortion ban')\n",
        "ax.set_xticks([0, bar_width])\n",
        "ax.set_xticklabels(['Ban exists', 'No ban'])\n",
        "ax.legend()\n",
        "\n",
        "# Display the plot\n",
        "plt.show()\n",
        "\n",
        "#This graph shows abortion bans compared to the percentage of abortions by state. \n",
        "#From this graph it looks like the states with the lowest percentages of abortion are the same states with abortion bans."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "abortionOpinion = pd.read_csv('https://raw.githubusercontent.com/Mmarlo5/psychic-doodle/main/Sheet%201-Table%201.csv')\n",
        "abortionOpinion.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 214
        },
        "id": "38rgbPhjzZq6",
        "outputId": "7c2cfbe0-0575-4b4b-a006-d7e280bb78dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                                                   Table 1\n",
              "Year  Pro-Choice % Pro-Life % Mixed/Neither % Don’t know what the terms mean %  No opinion\n",
              "2022  55           39         4               1                                        Nah\n",
              "2021  49           47         2               1                                          1\n",
              "2020  48           46         4               2                                        Nah\n",
              "2019  46           49         2               2                                          2"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7d30c301-ab5c-4cc7-8902-d62e7cf8343b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Table 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <th>Pro-Choice %</th>\n",
              "      <th>Pro-Life %</th>\n",
              "      <th>Mixed/Neither %</th>\n",
              "      <th>Don’t know what the terms mean %</th>\n",
              "      <td>No opinion</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022</th>\n",
              "      <th>55</th>\n",
              "      <th>39</th>\n",
              "      <th>4</th>\n",
              "      <th>1</th>\n",
              "      <td>Nah</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021</th>\n",
              "      <th>49</th>\n",
              "      <th>47</th>\n",
              "      <th>2</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020</th>\n",
              "      <th>48</th>\n",
              "      <th>46</th>\n",
              "      <th>4</th>\n",
              "      <th>2</th>\n",
              "      <td>Nah</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019</th>\n",
              "      <th>46</th>\n",
              "      <th>49</th>\n",
              "      <th>2</th>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d30c301-ab5c-4cc7-8902-d62e7cf8343b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7d30c301-ab5c-4cc7-8902-d62e7cf8343b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7d30c301-ab5c-4cc7-8902-d62e7cf8343b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Data\n",
        "year = [2014, 2015, 2016, 2017, 2018, 2019, 2020]\n",
        "pro_choice = [50, 51, 53, 50, 53, 50, 50]\n",
        "pro_life = [43, 42, 41, 46, 43, 46, 47]\n",
        "mixed_neither = [4, 4, 3, 3, 3, 3, 2]\n",
        "dont_know = [1, 1, 2, 1, 1, 1, 1]\n",
        "no_opinion = [1, 1, 1, 1, 0, 0, 0]\n",
        "\n",
        "# Create the figure and axis objects\n",
        "fig, ax = plt.subplots(figsize=(10, 6))\n",
        "\n",
        "# Plot the stacked bars\n",
        "ax.bar(year, pro_choice, label='Pro-Choice', color='#5E9CD3')\n",
        "ax.bar(year, pro_life, bottom=pro_choice, label='Pro-Life', color='#D35E5E')\n",
        "ax.bar(year, mixed_neither, bottom=[sum(x) for x in zip(pro_choice, pro_life)], label='Mixed/Neither', color='#9F9F9F')\n",
        "ax.bar(year, dont_know, bottom=[sum(x) for x in zip(pro_choice, pro_life, mixed_neither)], label=\"Don't know\", color='#BFBFBF')\n",
        "ax.bar(year, no_opinion, bottom=[sum(x) for x in zip(pro_choice, pro_life, mixed_neither, dont_know)], label='No Opinion', color='#D3D3D3')\n",
        "\n",
        "# Add labels and legend\n",
        "ax.set_title('Abortion Opinion by Year')\n",
        "ax.set_xlabel('Year')\n",
        "ax.set_ylabel('Percentage')\n",
        "ax.legend()\n",
        "\n",
        "# Show the plot\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 440
        },
        "id": "5EkEbkmg07iq",
        "outputId": "f8cdf916-ef9b-4218-ba9e-5c3fea6d2adc"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 7 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 7 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 7 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 7 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<BarContainer object of 7 artists>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Abortion Opinion by Year')"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0, 'Year')"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Percentage')"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7ff23983be50>"
            ]
          },
          "metadata": {},
          "execution_count": 49
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "years = [1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\n",
        "pro_life = [33, 36, 44, 45, 42, 43, 46, 46, 45, 44, 44, 41, 45, 51, 47, 45, 48, 50, 45, 47, 50, 49, 48, 46, 49, 48, 49, 55]\n",
        "pro_choice = [56, 53, 51, 48, 48, 48, 46, 47, 48, 49, 48, 51, 49, 50, 46, 45, 46, 41, 45, 47, 50, 49, 49, 48, 46, 55, 49]\n",
        "\n",
        "print(\"Number of data points in years:\", len(years))\n",
        "print(\"Number of data points in pro_life:\", len(pro_life))\n",
        "print(\"Number of data points in pro_choice:\", len(pro_choice))\n",
        "#Need to change the difference between the number of variables. "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LB-JTUFW4sLq",
        "outputId": "d5162369-2ce0-4489-afe5-c8429b2c23c9"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of data points in years: 28\n",
            "Number of data points in pro_life: 28\n",
            "Number of data points in pro_choice: 27\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "mixed = [5, 4, 3, 3, 2, 4, 2, 3, 2, 2, 3, 4, 3, 1, 3, 2, 2, 4, 3, 3, 3, 2, 2, 2, 3, None, 4]\n",
        "dont_know = [3, 3, 3, 2, 4, 2, 3, 3, 4, 3, 3, 3, 2, 2, 2, 4, 3, 3, None, 1, None, 1, 2, 1, None, 2, 1]\n",
        "no_opinion = [None, 3, 3, 2, 3, 3, 2, 1, 1, 2, 1, 2, None, 2, None, 2, 2, 3, None, None, 1, 3, 1, 2, 3, None, None]\n",
        "\n",
        "print(\"Number of data points in mixed:\", len(mixed))\n",
        "print(\"Number of data points in dont_know:\", len(dont_know))\n",
        "print(\"Number of data points in no_opinion:\", len(no_opinion))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9N9IT1Y85LJN",
        "outputId": "b78255b1-4e44-4a99-821b-f6ed2dc422e2"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of data points in mixed: 27\n",
            "Number of data points in dont_know: 27\n",
            "Number of data points in no_opinion: 27\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMRQTCdhbwjsc9nufcdf4b+",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}